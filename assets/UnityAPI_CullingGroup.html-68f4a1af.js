import{_ as e,r as t,o as p,c as o,a as n,b as s,e as c,f as i}from"./app-dc26d074.js";const l="/assets/culling1-59ef461a.gif",u={},r=n("h1",{id:"unityapi-利器cullinggroup",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#unityapi-利器cullinggroup","aria-hidden":"true"},"#"),s(" UnityAPI：利器CullingGroup")],-1),d={href:"https://docs.unity3d.com/Manual/CullingGroupAPI.html",target:"_blank",rel:"noopener noreferrer"},k=i(`<p>这个API非常强大，可以快速的实现自定义的Occlusion culling和Lod系统，并且性能表现极佳。</p><h2 id="简要原理" tabindex="-1"><a class="header-anchor" href="#简要原理" aria-hidden="true">#</a> 简要原理</h2><p>CullingGroup为了性能考虑，把所有的物体模拟为球形，传入摄像机后，检测球形与相机视窗的交集，通过onStateChanged通知应用层物体的可见性变化，在这里进行显示隐藏控制即可。</p><h2 id="代码注释" tabindex="-1"><a class="header-anchor" href="#代码注释" aria-hidden="true">#</a> 代码注释</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">CullingGroup</span> <span class="token keyword">group</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CullingGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">group</span><span class="token punctuation">.</span>targetCamera <span class="token operator">=</span> Camera<span class="token punctuation">.</span>main<span class="token punctuation">;</span>
<span class="token class-name">BoundingSphere<span class="token punctuation">[</span><span class="token punctuation">]</span></span> spheres <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BoundingSphere</span><span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// 把游戏中的物体与Sphere一一对应，并告知cullingGroup数量变化。</span>
spheres<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BoundingSphere</span><span class="token punctuation">(</span>Vector3<span class="token punctuation">.</span>zero<span class="token punctuation">,</span> <span class="token number">1f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">group</span><span class="token punctuation">.</span><span class="token function">SetBoundingSpheres</span><span class="token punctuation">(</span>spheres<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">group</span><span class="token punctuation">.</span><span class="token function">SetBoundingSphereCount</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">group</span><span class="token punctuation">.</span>onStateChanged <span class="token operator">=</span> StateChangedMethod<span class="token punctuation">;</span>

<span class="token comment">// Sphere状态发生变化后，这里就会得到通知</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">StateChangedMethod</span><span class="token punctuation">(</span><span class="token class-name">CullingGroupEvent</span> evt<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>hasBecomeVisible<span class="token punctuation">)</span>
        Debug<span class="token punctuation">.</span><span class="token function">LogFormat</span><span class="token punctuation">(</span><span class="token string">&quot;Sphere {0} has become visible!&quot;</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>hasBecomeInvisible<span class="token punctuation">)</span>
        Debug<span class="token punctuation">.</span><span class="token function">LogFormat</span><span class="token punctuation">(</span><span class="token string">&quot;Sphere {0} has become invisible!&quot;</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="效果展示" tabindex="-1"><a class="header-anchor" href="#效果展示" aria-hidden="true">#</a> 效果展示</h2><figure><img src="`+l+'" alt="culling1.gif" tabindex="0" loading="lazy"><figcaption>culling1.gif</figcaption></figure>',7);function h(m,v){const a=t("ExternalLinkIcon");return p(),o("div",null,[r,n("p",null,[n("a",d,[s("https://docs.unity3d.com/Manual/CullingGroupAPI.html"),c(a)])]),k])}const b=e(u,[["render",h],["__file","UnityAPI_CullingGroup.html.vue"]]);export{b as default};
