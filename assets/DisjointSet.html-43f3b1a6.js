const t=JSON.parse('{"key":"v-8c7ad8b0","path":"/posts/DisjointSet.html","title":"关于DisjointSet","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2023-06-29T00:00:00.000Z","category":["游戏开发","数据结构"],"tag":["gameDev"],"description":"关于DisjointSet Disjoint Sets意思是一系列没有重复元素的集合。一种常见的实现叫做，Disjoint-set Forest可以以接近常数的时间复杂度查询元素所属集合，用来确定两个元素是否同属一个集合等，是效率最高的常见数据结构之一。 Wiki链接：https://en.wikipedia.org/wiki/Disjoint-set_data_structure","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/DisjointSet.html"}],["meta",{"property":"og:site_name","content":"Moonwalk"}],["meta",{"property":"og:title","content":"关于DisjointSet"}],["meta",{"property":"og:description","content":"关于DisjointSet Disjoint Sets意思是一系列没有重复元素的集合。一种常见的实现叫做，Disjoint-set Forest可以以接近常数的时间复杂度查询元素所属集合，用来确定两个元素是否同属一个集合等，是效率最高的常见数据结构之一。 Wiki链接：https://en.wikipedia.org/wiki/Disjoint-set_data_structure"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-29T10:05:50.000Z"}],["meta",{"property":"article:author","content":"Moonwalk"}],["meta",{"property":"article:tag","content":"gameDev"}],["meta",{"property":"article:published_time","content":"2023-06-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-29T10:05:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"关于DisjointSet\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-29T10:05:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Moonwalk\\",\\"url\\":\\"https://gmoonwalk.github.io\\"}]}"]]},"headers":[{"level":2,"title":"结构实现","slug":"结构实现","link":"#结构实现","children":[{"level":3,"title":"表示","slug":"表示","link":"#表示","children":[]},{"level":3,"title":"添加","slug":"添加","link":"#添加","children":[]},{"level":3,"title":"查询","slug":"查询","link":"#查询","children":[]},{"level":3,"title":"路径压缩优化","slug":"路径压缩优化","link":"#路径压缩优化","children":[]},{"level":3,"title":"合并","slug":"合并","link":"#合并","children":[]},{"level":3,"title":"按秩合并优化","slug":"按秩合并优化","link":"#按秩合并优化","children":[]}]},{"level":2,"title":"应用思路","slug":"应用思路","link":"#应用思路","children":[{"level":3,"title":"关于删除道路","slug":"关于删除道路","link":"#关于删除道路","children":[]}]}],"git":{"createdTime":1688033150000,"updatedTime":1688033150000,"contributors":[{"name":"zhouyue","email":"zhouyue@camel4u.com","commits":1}]},"readingTime":{"minutes":4.29,"words":1287},"filePathRelative":"posts/DisjointSet.md","localizedDate":"2023年6月29日","excerpt":"<h1> 关于DisjointSet</h1>\\n<p>Disjoint Sets意思是一系列没有重复元素的集合。一种常见的实现叫做，Disjoint-set Forest可以以接近常数的时间复杂度查询元素所属集合，用来确定两个元素是否同属一个集合等，是效率最高的常见数据结构之一。</p>\\n<p>Wiki链接：<a href=\\"https://en.wikipedia.org/wiki/Disjoint-set_data_structure\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://en.wikipedia.org/wiki/Disjoint-set_data_structure</a></p>","autoDesc":true}');export{t as data};
