const e=JSON.parse('{"key":"v-d2522dbc","path":"/kcp/kcp_1%20aeebf10f6c1a4f79bee7b8b67ae03ea6.html","title":"KCP技术原理","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2023-06-19T01:00:00.000Z","order":1,"category":["计算机网络"],"tag":["kcp"],"description":"KCP技术原理 KCP是什么 开源地址： https://github.com/skywind3000/kcp/tree/master KCP是一个快速可靠协议，能以比 TCP浪费10%-20%的带宽的代价，换取平均延迟降低 30%-40%，且最大延迟降低三倍的传输效果。纯算法实现，并不负责底层协议（如UDP）的收发，需要使用者自己定义下层数据包的发送方式，并以 callback的方式提供给 KCP。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/kcp/kcp_1%20aeebf10f6c1a4f79bee7b8b67ae03ea6.html"}],["meta",{"property":"og:site_name","content":"Moonwalk"}],["meta",{"property":"og:title","content":"KCP技术原理"}],["meta",{"property":"og:description","content":"KCP技术原理 KCP是什么 开源地址： https://github.com/skywind3000/kcp/tree/master KCP是一个快速可靠协议，能以比 TCP浪费10%-20%的带宽的代价，换取平均延迟降低 30%-40%，且最大延迟降低三倍的传输效果。纯算法实现，并不负责底层协议（如UDP）的收发，需要使用者自己定义下层数据包的发送方式，并以 callback的方式提供给 KCP。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-21T04:04:24.000Z"}],["meta",{"property":"article:author","content":"Moonwalk"}],["meta",{"property":"article:tag","content":"kcp"}],["meta",{"property":"article:published_time","content":"2023-06-19T01:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-21T04:04:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"KCP技术原理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-19T01:00:00.000Z\\",\\"dateModified\\":\\"2023-06-21T04:04:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Moonwalk\\",\\"url\\":\\"https://gmoonwalk.github.io\\"}]}"]]},"headers":[{"level":2,"title":"KCP是什么","slug":"kcp是什么","link":"#kcp是什么","children":[]},{"level":2,"title":"实现原理","slug":"实现原理","link":"#实现原理","children":[{"level":3,"title":"那我们为什么不直接用TCP呢？或者说它为什么比TCP快？","slug":"那我们为什么不直接用tcp呢-或者说它为什么比tcp快","link":"#那我们为什么不直接用tcp呢-或者说它为什么比tcp快","children":[]},{"level":3,"title":"使用原理","slug":"使用原理","link":"#使用原理","children":[]}]}],"git":{"createdTime":1687317460000,"updatedTime":1687320264000,"contributors":[{"name":"zhouyue","email":"zhouyue@camel4u.com","commits":2}]},"readingTime":{"minutes":4.08,"words":1223},"filePathRelative":"kcp/kcp_1 aeebf10f6c1a4f79bee7b8b67ae03ea6.md","localizedDate":"2023年6月19日","excerpt":"<h1> KCP技术原理</h1>\\n<h2> KCP是什么</h2>\\n<p>开源地址： <a href=\\"https://github.com/skywind3000/kcp/tree/master\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/skywind3000/kcp/tree/master</a></p>\\n<p>KCP是一个快速可靠协议，能以比 TCP浪费10%-20%的带宽的代价，换取平均延迟降低 30%-40%，且最大延迟降低三倍的传输效果。纯算法实现，并不负责底层协议（如UDP）的收发，需要使用者自己定义下层数据包的发送方式，并以 callback的方式提供给 KCP。</p>","autoDesc":true}');export{e as data};
